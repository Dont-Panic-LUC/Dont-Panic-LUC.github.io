!function(){"use strict";const e=1677539016380,s=`cache${e}`,t=["/client/client.bebc44b8.js","/client/inject_styles.5607aec6.js","/client/index.685cf7d4.js","/client/EventsRoll.3eab8a98.js","/client/contact.bfd527a6.js","/client/e-board.3ee559f8.js","/client/index.40850fe4.js","/client/about.eb5438d7.js","/client/index.5ebb1add.js","/client/[slug].ca370c1e.js"].concat(["/service-worker-index.html","/assets/content/events/2021-01-kickoff-game-night.png","/assets/content/events/2021-02-tips-from-a-hiring-perspective.jpg","/assets/content/events/2021-03-creating-a-portfolio.png","/assets/content/events/2023-03-game-night.jpg","/assets/content/events/Fall.jpg","/assets/content/events/Fall_2021_-_Introduction_to_Web_Development.png","/assets/content/events/Fall_2021_-_Kickoff_Meeting.png","/assets/content/events/Fall_2021_-_Registration_Bonanza.png","/assets/content/events/Spring_2023_eboard-registration.png","/assets/content/events/tbd.png","/assets/e-board/Aaron.jpg","/assets/e-board/Eno.jpg","/assets/e-board/Julia.jpg","/assets/e-board/Kenneth.jpg","/assets/e-board/Tamanna.jpg","/assets/e-board/Victor-2.jpg","/assets/e-board/alex.jpg","/assets/e-board/anon.png","/assets/e-board/anran.png","/assets/e-board/henry.jpg","/assets/e-board/iqra.jpg","/assets/e-board/jess.jpg","/assets/e-board/makenna.jpg","/assets/e-board/rayyan.jpg","/assets/e-board/tien.jpg","/assets/e-board/victor.jpg","/assets/misc/googlePassport.jpg","/components.css","/favicon.png","/global.css","/logo-192.png","/logo-512.png","/manifest.json","/normalize.css","/robots.txt"]),n=new Set(t);self.addEventListener("install",(e=>{e.waitUntil(caches.open(s).then((e=>e.addAll(t))).then((()=>{self.skipWaiting()})))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((async e=>{for(const t of e)t!==s&&await caches.delete(t);self.clients.claim()})))})),self.addEventListener("fetch",(s=>{if("GET"!==s.request.method||s.request.headers.has("range"))return;const t=new URL(s.request.url),a=t.protocol.startsWith("http"),o=t.hostname===self.location.hostname&&t.port!==self.location.port,c=t.host===self.location.host&&n.has(t.pathname),i="only-if-cached"===s.request.cache&&!c;!a||o||i||s.respondWith((async()=>c&&await caches.match(s.request)||async function(s){const t=await caches.open(`offline${e}`);try{const e=await fetch(s);return t.put(s,e.clone()),e}catch(e){const n=await t.match(s);if(n)return n;throw e}}(s.request))())}))}();
